Merge Sort Complexity analysis

for loop      - n
for loop      - n
merge_sort    - T(n/2)
merge_sort    - T(n/2)
merge         - n

Recurrence relation

T(n)  = c if n == 1
      = 2T(n/2) + n

T(n)  = 2T(n/2) + n
      = 2 [ 2T(n/4) + n/2 ] + n
      = 4T(n/4) + 2n
      = 4 [ 2T(n/8) n/4 ] + n
      = 8T(n/8) + 3n
      = 16T(n/16) + 4n
      = ...
      = (2^k)T(n/(2^k)) + kn

      T(1) = c

      n/(2^k) = 1
      2^k = n
      k = lg n

      = (2^lg n)T(1) + n lg n
      = cn + n lg n

      O(n log n) 
